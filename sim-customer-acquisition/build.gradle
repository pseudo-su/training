buildscript {
    ext.kotlin_version = "1.3.50"
    ext.jackson_version = "2.9.6"
    ext.ktor_version = "1.2.4"
    ext.logback_version = "1.2.3"
    ext.slf4j_version = "1.7.25"
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.3"
    }
}

apply plugin: "kotlin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "idea"

mainClassName = "com.sim.customer.acquisition.SimpleProducerKt"

// TODO: Intellij chucks a hissy fit if we put use sourceSets like this ðŸ™„
// sourceSets {
//     main {
//         kotlin {
//             srcDirs = ["src"]
//             exclude "**/*.test.kt"
//         }
//         resources {
//             srcDirs = [ "resources" ]
//         }
//     }
//     test {
//         kotlin {
//             srcDirs = ["test"]
//             include "**/*.test.kt"
//         }
//     }
// }

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // fake data generator
    compile "com.github.javafaker:javafaker:0.15"

    // logging
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.slf4j:slf4j-log4j12:1.7.25"

    // JSON serialization
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    // Kafka
    compile "org.apache.kafka:kafka-clients:2.0.0"
    compile "io.confluent:kafka-avro-serializer:5.0.0"

    testCompile "junit:junit:4.11"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

shadowJar {
    archiveBaseName = "sim-customer-acquisition"
    archiveClassifier = null
    archiveVersion = null
}

task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration ->
                if (configuration.canBeResolved) configuration.resolve()
            }
            subProject.configurations.each { configuration ->
                if (configuration.canBeResolved) configuration.resolve()
            }
        }
    }
}
